-- Create tables with primary and foreign keys
CREATE TABLE AIRCRAFT (
    Aircraft_ID INT PRIMARY KEY,
    Aircraft_name VARCHAR(50),
    Cruising_range INT
);

CREATE TABLE EMPLOYEE (
    Emp_ID INT PRIMARY KEY,
    Ename VARCHAR(50),
    Salary INT
);

CREATE TABLE CERTIFIED (
    Emp_ID INT,
    Aircraft_ID INT,
    PRIMARY KEY (Emp_ID, Aircraft_ID),
    FOREIGN KEY (Emp_ID) REFERENCES EMPLOYEE(Emp_ID),
    FOREIGN KEY (Aircraft_ID) REFERENCES AIRCRAFT(Aircraft_ID)
);

-- Insert 5 tuples into AIRCRAFT table
INSERT INTO AIRCRAFT VALUES (1, 'Boeing 747', 8000);
INSERT INTO AIRCRAFT VALUES (2, 'Airbus A320', 3500);
INSERT INTO AIRCRAFT VALUES (3, 'Cessna 172', 1200);
INSERT INTO AIRCRAFT VALUES (4, 'Bombardier CRJ200', 1500);
INSERT INTO AIRCRAFT VALUES (5, 'Lockheed Martin C-130', 4000);

-- Insert 5 tuples into EMPLOYEE table
INSERT INTO EMPLOYEE VALUES (101, 'John Doe', 55000);
INSERT INTO EMPLOYEE VALUES (102, 'Jane Smith', 60000);
INSERT INTO EMPLOYEE VALUES (103, 'Emily Davis', 45000);
INSERT INTO EMPLOYEE VALUES (104, 'Michael Johnson', 75000);
INSERT INTO EMPLOYEE VALUES (105, 'David Lee', 42000);

-- Insert 5 tuples into CERTIFIED table
INSERT INTO CERTIFIED VALUES (101, 1);
INSERT INTO CERTIFIED VALUES (102, 2);
INSERT INTO CERTIFIED VALUES (103, 3);
INSERT INTO CERTIFIED VALUES (104, 4);
INSERT INTO CERTIFIED VALUES (105, 5);

-- Query 1: Find the employee IDâ€™s of employee who make the highest salary
SELECT Emp_ID
FROM EMPLOYEE
WHERE Salary = (SELECT MAX(Salary) FROM EMPLOYEE);

-- Query 2: Find the name of aircrafts such that all pilots certified to operate them earn more than 50000
SELECT A.Aircraft_name
FROM AIRCRAFT A
JOIN CERTIFIED C ON A.Aircraft_ID = C.Aircraft_ID
JOIN EMPLOYEE E ON C.Emp_ID = E.Emp_ID
GROUP BY A.Aircraft_name
HAVING MIN(E.Salary) > 50000;

-- Query 3: Find the employees who are not certified for operating any aircraft
SELECT E.Ename
FROM EMPLOYEE E
LEFT JOIN CERTIFIED C ON E.Emp_ID = C.Emp_ID
WHERE C.Emp_ID IS NULL;
